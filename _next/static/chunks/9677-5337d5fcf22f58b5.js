"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9677],{56870:function(e,i,t){t.d(i,{GlobalAudioContextProvider:function(){return o},Y:function(){return l}});var a=t(57437),n=t(2265);let s=(0,n.createContext)(null),r=()=>{"undefined"!=typeof navigator&&navigator.audioSession&&(navigator.audioSession.type="play-and-record"),console.log("creating audio context");let e=new AudioContext;return e.onstatechange=()=>{if(console.log("onstatechange - AudioContext state changed: ",e.state),e.state,"interrupted"===e.state.toString()&&console.log("Safari interrupted audiocontext, but won't resume for now..."),"running"===e.state){let i=e.currentTime;setTimeout(()=>{console.log("[useAudioContext] Comparing last known time: ",i),console.log("[useAudioContext] Current time: ",e.currentTime),e.currentTime===i&&console.warn("AudioContext currentTime is stuck, attempting to fix...")},100)}},e},o=e=>{let{children:i}=e,[t,o]=(0,n.useState)(()=>r()),l=(0,n.useCallback)(()=>{console.log("Replacing AudioContext with new one"),t.close(),o(r())},[t]);return(0,a.jsx)(s.Provider,{value:{audioContext:t,replaceAudioContext:l},children:i})},l=()=>{let e=(0,n.useContext)(s);if(!e)throw Error("useAudioContext must be used within a GlobalAudioContextProvider");return Object.assign(e.audioContext,{replaceAudioContext:e.replaceAudioContext})}},49677:function(e,i,t){t.d(i,{Z:function(){return o}});var a=t(2265),n=t(9800);class s{init(){if(this.isInitialized){console.warn("MicManager: already initialized");return}if(this.initializing){console.warn("MicManager: already initializing");return}this.initializing=this._init()}async _init(){var e;for(let i of(console.log("MicManager init start...",this),this.mediaStream=await navigator.mediaDevices.getUserMedia({audio:{deviceId:null!==(e=this.selectedMicId)&&void 0!==e?e:void 0,echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0,sampleRate:16e3}}),this.mediaStream.getAudioTracks()))i.enabled=!this.isMuted;this.mediaRecorder=new MediaRecorder(this.mediaStream),await this.initVad(),this.isInitialized=!0,this.initializing=null,console.log("MicManager init complete.")}async initVad(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.mediaStream){console.warn("MicManager: no mediaStream to initVad");return}if(this.vad&&!e){console.warn("MicManager: vad already initialized");return}this.vad&&(console.warn("MicManager: vad already initialized, but forcing re-init"),this.destroyVad()),this.vad=await n.MicVAD.new({baseAssetPath:"/vad/",onnxWASMBasePath:"/vad/",stream:this.mediaStream,onSpeechStart:()=>{var e;this.isVoiceDetected=!0,null===(e=this.onSpeechStart)||void 0===e||e.call(this)},onVADMisfire:()=>{var e;this.isVoiceDetected=!1,null===(e=this.onSpeechEnd)||void 0===e||e.call(this,!0)},onSpeechEnd:()=>{var e;this.isVoiceDetected=!1,null===(e=this.onSpeechEnd)||void 0===e||e.call(this,!1)},onFrameProcessed:(e,i)=>{var t,a;this.lastPCMTimestamp=Date.now();let n=new ArrayBuffer(2*i.length),s=new DataView(n);for(let e=0;e<i.length;e++)s.setInt16(2*e,32767*i[e],!0);null===(t=this.onAlwaysPCMData)||void 0===t||t.call(this,n),this.capturingPCM&&(null===(a=this.onPCMData)||void 0===a||a.call(this,n))}}),this.vad.start()}destroyVad(){this.vad?(this.vad.destroy(),this.vad=null,this.lastPCMTimestamp=null):console.warn("MicManager: no vad to destroy")}async ensureVad(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;this.vad&&this.lastPCMTimestamp&&Date.now()-this.lastPCMTimestamp<e||(console.warn("MicManager: vad is broken, re-initializing..."),await this.initVad(!0))}startPCM(){this.capturingPCM=!0}stopPCM(){this.capturingPCM=!1}setMuted(){var e;let i=!(arguments.length>0)||void 0===arguments[0]||arguments[0];this.isMuted!==i&&(this.ensureVad(),this.isMuted=i,null===(e=this.mediaStream)||void 0===e||e.getAudioTracks().forEach(e=>{e.enabled=!i}))}startRecording(){if(this.mediaRecorder||console.warn("MicManager: no mediaRecorder to start"),this.isRecording){console.warn("MicManager: already recording");return}this.ensureVad(),this.isRecording=!0,this.wasCancelled=!1,this.startPCM(),this.mediaRecorder&&(this.mediaRecorder.ondataavailable=e=>{this.lastDataAvailablePromise=(async()=>{var i;let t=await e.data.arrayBuffer();null===(i=this.onAudioData)||void 0===i||i.call(this,t)})()},this.mediaRecorder.onstart=()=>{var e;null===(e=this.onRecordingStart)||void 0===e||e.call(this)},this.mediaRecorder.onstop=async()=>{var e;this.lastDataAvailablePromise&&await this.lastDataAvailablePromise,this.isRecording=!1,null===(e=this.onRecordingStop)||void 0===e||e.call(this,this.wasCancelled)},this.mediaRecorder.start(this.recordingChunkSize))}stopRecording(){var e;this.isRecording&&(this.ensureVad(),this.stopPCM(),null===(e=this.mediaRecorder)||void 0===e||e.stop())}cancelRecording(){this.isRecording&&(this.ensureVad(),this.wasCancelled=!0,this.stopRecording())}async destroy(){if(!this.isInitialized&&!this.initializing){console.warn("MicManager: not initialized nor initializing");return}if(this.initializing&&(console.info("MicManager: still initializing, waiting..."),await this.initializing),console.log("MicManager: destroying..."),this.destroyVad(),this.mediaRecorder&&(this.mediaRecorder.stop(),this.mediaRecorder.ondataavailable=null,this.mediaRecorder.onstop=null,this.mediaRecorder.onstart=null,this.mediaRecorder=null),this.mediaStream&&(this.mediaStream.getTracks().forEach(e=>e.stop()),this.mediaStream=null),this.isVoiceDetected){var e;this.isVoiceDetected=!1,null===(e=this.onSpeechEnd)||void 0===e||e.call(this,!1)}this.isRecording=!1,this.wasCancelled=!1,this.capturingPCM=!1,this.isInitialized=!1,console.log("MicManager: destroyed")}constructor({recordingChunkSize:e=100,selectedMicId:i=null,onSpeechStart:t,onSpeechEnd:a,onAlwaysPCMData:n,onPCMData:s,onAudioData:r,onRecordingStart:o,onRecordingStop:l}){this.mediaStream=null,this.mediaRecorder=null,this.vad=null,this.isMuted=!1,this.isRecording=!1,this.wasCancelled=!1,this.isVoiceDetected=!1,this.capturingPCM=!1,this.lastPCMTimestamp=null,this.lastDataAvailablePromise=null,this.isInitialized=!1,this.initializing=null,this.recordingChunkSize=e,this.selectedMicId=i,this.onSpeechStart=t,this.onSpeechEnd=a,this.onAlwaysPCMData=n,this.onPCMData=s,this.onAudioData=r,this.onRecordingStart=o,this.onRecordingStop=l}}var r=t(56870);function o(e){let{startMuted:i=!1,recordingChunkSize:t=100,onSpeechStart:n,onSpeechEnd:o,onAlwaysPCMData:l,onPCMData:d,onAudioData:c,onRecordingStart:u,onRecordingStop:h}=e,[g,v]=(0,a.useState)("AirPods"),[m,f]=(0,a.useState)(!1),[M,p]=(0,a.useState)(!1),[R,S]=(0,a.useState)(i),C=(0,a.useRef)(null),w=(0,a.useRef)(n),y=(0,a.useRef)(o),P=(0,a.useRef)(l),A=(0,a.useRef)(d),b=(0,a.useRef)(c),D=(0,a.useRef)(u),E=(0,a.useRef)(h);(0,a.useEffect)(()=>{w.current=n},[n]),(0,a.useEffect)(()=>{y.current=o},[o]),(0,a.useEffect)(()=>{P.current=l},[l]),(0,a.useEffect)(()=>{A.current=d},[d]),(0,a.useEffect)(()=>{b.current=c},[c]),(0,a.useEffect)(()=>{D.current=u},[u]),(0,a.useEffect)(()=>{E.current=h},[h]);let x=(0,r.Y)(),z=/iPad|iPhone|iPod/.test(navigator.userAgent),[V,k]=(0,a.useState)(0);return(0,a.useLayoutEffect)(()=>{let e=()=>{"visible"===document.visibilityState&&(console.log("Tab reopened"),k(e=>e+1))};return document.addEventListener("visibilitychange",e),()=>document.removeEventListener("visibilitychange",e)},[]),(0,a.useEffect)(()=>{let e=new s({selectedMicId:g,recordingChunkSize:t,onSpeechStart:()=>{var e;p(!0),null===(e=w.current)||void 0===e||e.call(w)},onSpeechEnd:e=>{var i;p(!1),null===(i=y.current)||void 0===i||i.call(y,e)},onAlwaysPCMData:e=>{var i;null===(i=P.current)||void 0===i||i.call(P,e)},onPCMData:e=>{var i;null===(i=A.current)||void 0===i||i.call(A,e)},onAudioData:e=>{var i;null===(i=b.current)||void 0===i||i.call(b,e)},onRecordingStart:()=>{var e;f(!0),null===(e=D.current)||void 0===e||e.call(D)},onRecordingStop:e=>{var i;f(!1),null===(i=E.current)||void 0===i||i.call(E,e)}});C.current=e;let i=navigator.audioSession;return i?(console.log("Performing the ritual to fix iOS Safari audioSession bug..."),i.type="playback",x.suspend().then(()=>{console.log("AudioContext suspended"),x.resume(),i.type="play-and-record",console.log("Reacquiring mic after audioSession fix"),e.init()})):e.init(),()=>{e.destroy(),C.current=null}},[z&&V,g]),(0,a.useEffect)(()=>{var e;null===(e=C.current)||void 0===e||e.setMuted(R)},[R]),{isMuted:R,isRecording:m,isVoiceDetected:M,selectedMic:g,acquireMic:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;v(e)},setMuted:S,startRecording:()=>{var e;null===(e=C.current)||void 0===e||e.startRecording()},stopRecording:()=>{var e;return null===(e=C.current)||void 0===e?void 0:e.stopRecording()},cancelRecording:()=>{var e;return null===(e=C.current)||void 0===e?void 0:e.cancelRecording()}}}}}]);